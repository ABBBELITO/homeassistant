# Energy Monitoring Sensros for HKI Energy Monitoring

sensor:

  - platform: template
    sensors: 
    # All monnitored devices KwH  
      energy_total_usage:
        friendly_name: Total Energy Usage
        unit_of_measurement: kWh
        value_template: >-  
          {{ 
            (states.sensor.bedroom_tv_smart_plug_total_daily_energy.state | float) +
            (states.sensor.living_room_av_receiver_smart_plug_total_daily_energy.state | float) +
            (states.sensor.office_computer_smart_plug_total_daily_energy.state | float) +
            (states.sensor.sp_of_cab_total_daily_energy.state | float)
          }}

    # All monnitored devices W
      power_total_usage:
        friendly_name: Total Power Usage
        unit_of_measurement: W
        value_template: >-  
          {{ 
            (states.sensor.bedroom_tv_smart_plug_wattage.state | float) +
            (states.sensor.living_room_av_receiver_smart_plug_wattage.state | float) +
            (states.sensor.office_computer_smart_plug_wattage.state | float) +
            (states.sensor.sp_of_cab_wattage.state | float)
          }}

    # Energy Cost Now
      now_energy_cost:
        entity_id: sensor.energy_total_usage
        friendly_name: 'Now Cost'
        value_template: >-
          {% if (states.sensor.power_total_usage.state | float > 0) %}
            {{ ((states.sensor.power_total_usage.state) | float) / 1000 * (states('input_number.electricity_rate') | float ) + (states('input_number.daily_service_charge') | float | round(2)) }}
          {% endif %}

    # Daily Energy Cost
      daily_energy_cost:
        entity_id: sensor.daily_energy_kwh
        friendly_name: 'Daily Cost'
        value_template: >-
          {% if (states.sensor.daily_energy_kwh.state | float > 0) %}
            {{ ((states.sensor.daily_energy_kwh.state) | float) * (states('input_number.electricity_rate') | float ) + (states('input_number.daily_service_charge') | float | round(2)) }}
          {% endif %}
  #        {% if (states.sensor.daily_energy_kwh.state|float > 0) %}
  #          {{ (states.sensor.daily_energy_kwh.state|float * 0.2420)|round(2) }}
  #        {% endif %}

    # Monthly Energy Cost
      monthly_energy_cost:
        entity_id: sensor.monthly_energy_kwh
        friendly_name: 'Daily Cost'
        value_template: >-
          {% if (states.sensor.monthly_energy_kwh.state | float > 0) %}
            {{ ((states.sensor.monthly_energy_kwh.state) | float) * (states('input_number.electricity_rate') | float ) + (states('input_number.daily_service_charge') | float | round(2)) }}
          {% endif %}
  #        {% if (states.sensor.monthly_energy_kwh.state|float > 0) %}
  #          {{ (states.sensor.monthly_energy_kwh.state|float * 0.2420)|round(2) }}
  #        {% endif %}


# Python Script to pull previous day energy usage from supplier
#  - platform: command_line
#    name: Power Usage
#    command: "python3 /config/shell-energy.py electricity"

#  - platform: command_line
#    name: Gas Usage
#    command: "python3 /config/shell-energy.py gas"



input_number:
# Input on view for power costs per KwH
  electricity_rate:
    name: "Electricity Rate per kWh"
    min: 0.0000
    max: 5.0000
    mode: box
    step: 0.001
  daily_service_charge:
    name: "Daily Service Charge"
    min: 0.0000
    max: 5.0000
    mode: box
    step: 0.001

group:
  smart_plugs:
    name: All Smart Plugs
    entities:
      - switch.bedroom_tv_smart_plug_relay
      - switch.living_room_av_receiver_smart_plug_relay
      - switch.office_computer_smart_plug_relay
      - switch.living_room_subwoofer_smart_socket_relay
      - switch.sp_of_cab_relay