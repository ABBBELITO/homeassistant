## Home Assistant Monitoring Configuration

input_boolean:

# Home Assistant Update Available
  ha_update_available:
    name: HA Update Avaiable
    initial: false
    icon: mdi:cloud-download

binary_sensor:

  - platform: template
    sensors:
    # True if there's an update available for supervisor
      updater_supervisor:
        friendly_name: 'Updater - Supervisor'
        device_class: problem
        entity_id:
        - sensor.supervisor_updates
        value_template: "{{ state_attr('sensor.supervisor_updates', 'current_version') != state_attr('sensor.supervisor_updates', 'newest_version') }}"
        availability_template: "{{ (states('sensor.supervisor_updates') | int(-1)) > -1 }}"

      # True if there's updates available for any HACS components
      updater_hacs:
        friendly_name: 'Updater - HACS'
        device_class: problem
        entity_id:
        - sensor.hacs
        value_template: "{{ states('sensor.hacs') | int > 0 }}"

      # True if there's updates available for any addons
      updater_addons:
        friendly_name: 'Updater - Addons'
        device_class: problem
        entity_id:
        - sensor.supervisor_updates
        value_template: "{{ states('sensor.supervisor_updates') | int > 0 }}"


sensor:

# MariaDB Size Sensor
  - platform: sql
    db_url: !secret db_url
    queries:
      - name: 'Home Assistant DB size'
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1048576, 2) "value" FROM information_schema.tables WHERE table_schema="homeassistant_db" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: MB 

  # Sensor to track available updates for supervisor & addons
  - platform: command_line
    name: Supervisor updates
    command: 'curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version,"addons":[.data.addons[] | select(.version != .installed)]}'''
    value_template: "{{ value_json.addons | length }}"
    json_attributes:
    - newest_version
    - current_version
    - addons

# RESTful Sensor
## https://www.home-assistant.io/integrations/rest/

# HASSIO Version
  - platform: rest
    resource: https://s3.amazonaws.com/hassio-version/stable.json
    name: Latest HA Version
    value_template: "{{ value_json.homeassistant.intel-nuc }}"
    scan_interval: 3600

# Glances Addon
  - platform: rest
    resource: !secret glances_rest_url
    name: Glances Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version

# VSCode Addon
  - platform: rest
    resource: !secret vscode_rest_url
    name: VSCode Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version

# ESPHome Addon
  - platform: rest
    resource: !secret esphome_rest_url
    name: ESPHome Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version

# PHPMyAdmin Addon
  - platform: rest
    resource: !secret phpmyadmin_rest_url
    name: PHPMyAdmin Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version

# ADB Addon
  - platform: rest
    resource: !secret adb_rest_url
    name: ADB Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version

# AdGaurd Addon
  - platform: rest
    resource: !secret adgaurd_rest_url
    name: AdGaurd Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version

# Deconz Addon
  - platform: rest
    resource: !secret deconz_rest_url
    name: Deconz Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version

# Mosquitto Addon
  - platform: rest
    resource: !secret mosquitto_rest_url
    name: Mosquitto Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version

# SSH & Terminal Addon
  - platform: rest
    resource: !secret ssh_and_terminal_rest_url
    name: SSH and Terminal Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version

# MariaDB Addon
  - platform: rest
    resource: !secret mariadb_rest_url
    name: MariaDB Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version

# Node-Red Addon
  - platform: rest
    resource: !secret node_red_rest_url
    name: Node-Red Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version

  - platform: rest
    resource: !secret vscode_rest_url
    name: VSCode Addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret access_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - last_version


switch:

  - platform: template
    switches:

# Glances Switch Template
      glances_addon:
        value_template: "{{ is_state('sensor.glances_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_glances
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_glances

# VSCode Switch Template
      vscode_addon:
        value_template: "{{ is_state('sensor.vscode_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_vscode
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_vscode

# ESPHome Switch Template
      esphome_addon:
        value_template: "{{ is_state('sensor.esphome_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: 15ef4d2f_esphome
        turn_off:
          service: hassio.addon_stop
          data:
            addon: 15ef4d2f_esphome

# PHP MyAdmin Switch Template
      phpmyadmin_addon:
        value_template: "{{ is_state('sensor.phpmyadmin_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_phpmyadmin
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_phpmyadmin

# ADB Switch Template
      adb_addon:
        value_template: "{{ is_state('sensor.adb_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_adb
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_adb

# Adgaurd Switch Template
      adguard_addon:
        value_template: "{{ is_state('sensor.adguard_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_adguard
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_adguard

# Deconz Switch Template
      deconz_addon:
        value_template: "{{ is_state('sensor.deconz_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: core_deconz
        turn_off:
          service: hassio.addon_stop
          data:
            addon: core_deconz

# Mosquitto Switch Template
      mosquitto_addon:
        value_template: "{{ is_state('sensor.mosquitto_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: core_mosquitto
        turn_off:
          service: hassio.addon_stop
          data:
            addon: core_mosquitto

# SSH & Terminal Switch Template
      ssh_and_terminal_addon:
        value_template: "{{ is_state('sensor.ssh_and_terminal_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: core_ssh
        turn_off:
          service: hassio.addon_stop
          data:
            addon: core_ssh

# Maria dB Switch Template
      mariadb_addon:
        value_template: "{{ is_state('sensor.mariadb_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: core_mariadb
        turn_off:
          service: hassio.addon_stop
          data:
            addon: core_mariadb

# Node Red Switch Template
      node_red_addon:
        value_template: "{{ is_state('sensor.node_red_addon', 'started') }}"
        turn_on:
          service: hassio.addon_start
          data:
            addon: a0d7b954_nodered
        turn_off:
          service: hassio.addon_stop
          data:
            addon: a0d7b954_nodered


automation:

# Check New Versions
  - alias: "New Home Assitant Version"
    trigger:
      - platform: state
        entity_id: sensor.hassio_version
    action:
      service: notify.notify
      data:
        title: "New Home Assistant Version"
        message: "Version {{ states.sensor.latest_version.state }} is available!"



  - alias: Check config for update
    description: Starts the check config addon when an update becomes available
    trigger:
    - entity_id: binary_sensor.updater
      platform: state
      to: 'on'
    condition: []
    action:
    - data:
        addon: core_check_config
      service: hassio.addon_start


alert:

# Update is available - un-acknowledgeble, auto-dismiss, me only
# Wait 5 minutes before first to give core config check time to run
  ha_update_available:
    name: HA has an update
    entity_id: binary_sensor.updater
    state: 'on'
    can_acknowledge: false
    repeat: 
    - 5
    - 360
    title: 'Update for HA available'
    message: "New version is {{ state_attr('binary_sensor.updater', 'newest_version') }}. Currently on {{ states('sensor.current_version') }}"
    notifiers:
    - 'me'
    data:
      tag: 'ha-update-available'
      url: 'http://hassio.local/hassio/addon/core_check_config'
      ttl: 21600

# Supervisor update is available - un-acknowledgeable, auto-dismiss, me only
  supervisor_update_available:
    name: Supervisor has an update
    entity_id: binary_sensor.updater_supervisor
    state: 'on'
    can_acknowledge: false
    repeat: 360
    title: 'Update for HA Supervisor available'
    message: "New version is {{ state_attr('sensor.supervisor_updates', 'newest_version') }}. Currently on {{ state_attr('sensor.supervisor_updates', 'current_version') }}"
    notifiers:
    - 'me'
    data:
      tag: 'supervisor-update-available'
      url: 'http://hassio.local/hassio/dashboard'
      ttl: 21600

# HACS repos have updates available - unacknowledgeable, auto-dismiss, me only
  hacs_update_available:
    name: HACS repos have updates
    entity_id: binary_sensor.updater_hacs
    state: 'on'
    can_acknowledge: false
    repeat: 360
    title: "Updates available in {{ states('sensor.hacs') }} HACS repo{% if states('sensor.hacs') | int > 1 %}s{% endif %}"
    message: ""
    notifiers:
      - 'me'
    data:
      tag: 'hacs-update-available'
      url: 'http://hassio.local/hacs/installed'
      ttl: 21600

# Addons have updates available - unacknowledgeable, auto-dismiss, me only
  addon_update_available:
    name: Addons have updates
    entity_id: binary_sensor.updater_addons
    state: 'on'
    can_acknowledge: false
    repeat: 360
    title: "Updates available for {{ states('sensor.supervisor_updates') }} HA addon{% if states('sensor.supervisor_updates') | int > 1 %}s{% endif %}"
    message: ""
    notifiers:
    - 'me'
    data:
      tag: 'addon-update-available'
      url: 'http://hassio.local/hassio/dashboard'
      ttl: 21600