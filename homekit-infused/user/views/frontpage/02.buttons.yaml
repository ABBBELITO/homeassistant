- type: horizontal-stack
  cards:
    - type: custom:mod-card
      style: |
        ha-card {
          margin-left: 20px;
          margin-right: 20px;
        }
      card:
        type: custom:layout-card
        column_num: 4
        justify_content: start
        layout: horizontal
        cards:

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: Kitchen
              label: Overview
              icon: mdi:pot
              navigation_path: /homekit-infused/custom_1
              notification: "[[[ if (states['sensor.current_kitchen_lights_on'].state == 0) return '&nbsp'; else return `${states['sensor.current_kitchen_lights_on'].state}`; ]]]"
              background_color: "[[[ if (states['sensor.current_kitchen_lights_on'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: Living Room
              label: Overview
              icon: mdi:sofa
              navigation_path: /homekit-infused/custom_2
              notification: "[[[ if (states['sensor.current_living_room_lights_on'].state == 0) return '&nbsp'; else return `${states['sensor.current_living_room_lights_on'].state}`; ]]]"
              background_color: "[[[ if (states['sensor.current_living_room_lights_on'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: Hall
              label: Overview
              icon: mdi:door
              navigation_path: /homekit-infused/custom_3
              notification: "[[[ if (states['sensor.current_hall_lights_on'].state == 0) return '&nbsp'; else return `${states['sensor.current_hall_lights_on'].state}`; ]]]"
              background_color: "[[[ if (states['sensor.current_hall_lights_on'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: Toilet
              label: Overview
              icon: mdi:toilet
              navigation_path: /homekit-infused/custom_4
              notification: "[[[ if (states['sensor.current_bathroom_lights_on'].state == 0) return '&nbsp'; else return `${states['sensor.current_bathroom_lights_on'].state}`; ]]]"
              background_color: "[[[ if (states['sensor.current_bathroom_lights_on'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: Landing
              label: Overview
              icon: mdi:stairs
              navigation_path: /homekit-infused/custom_5
              notification: "[[[ if (states['sensor.current_landing_lights_on'].state == 0) return '&nbsp'; else return `${states['sensor.current_landing_lights_on'].state}`; ]]]"
              background_color: "[[[ if (states['sensor.current_landing_lights_on'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: Bedroom
              label: Overview
              icon: mdi:bed
              navigation_path: /homekit-infused/custom_6
              notification: "[[[ if (states['input_number.empty'].state == 0) return '&nbsp'; else return `${states['input_number.empty'].state}`; ]]]"
              background_color: "[[[ if (states['input_number.empty'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: Craft Room
              label: Overview
              icon: mdi:brush
              navigation_path: /homekit-infused/custom_7
              notification: "[[[ if (states['input_number.empty'].state == 0) return '&nbsp'; else return `${states['input_number.empty'].state}`; ]]]"
              background_color: "[[[ if (states['input_number.empty'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: Offcie
              label: Overview
              icon: mdi:desktop-classic
              navigation_path: /homekit-infused/custom_8
              notification: "[[[ if (states['input_number.empty'].state == 0) return '&nbsp'; else return `${states['input_number.empty'].state}`; ]]]"
              background_color: "[[[ if (states['input_number.empty'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: HA
              label: Settings
              icon: mdi:cog
              navigation_path: /homekit-infused/ha_settings
              notification: "[[[ if (states['input_number.empty'].state == 0) return '&nbsp'; else return `${states['input_number.empty'].state}`; ]]]"
              background_color: "[[[ if (states['input_number.empty'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: Security
              label: Panel
              icon: mdi:cctv
              navigation_path: /homekit-infused/security
              notification: "[[[ if (states['input_number.empty'].state == 0) return '&nbsp'; else return `${states['input_number.empty'].state}`; ]]]"
              background_color: "[[[ if (states['input_number.empty'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: Hassio
              label: Dashboard
              icon: mdi:home-assistant
              navigation_path: /homekit-infused/devices
              notification: "[[[ if (states['input_number.empty'].state == 0) return '&nbsp'; else return `${states['input_number.empty'].state}`; ]]]"
              background_color: "[[[ if (states['input_number.empty'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"

          - !include
            - '../../../base/templates/button/button-badge.yaml'
            - name: unRAID
              label: Dashboard
              icon: mdi:server-security
              navigation_path: /homekit-infused/system
              notification: "[[[ if (states['input_number.empty'].state == 0) return '&nbsp'; else return `${states['input_number.empty'].state}`; ]]]"
              background_color: "[[[ if (states['input_number.empty'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"


#          - type: custom:button-card
#            entity: light.office
#            name: Skrivbord
#            style:
#              top: 20.35%
#              left: 41.31%
#              width: 10%
#            custom_fields:
#              icon_shade: >
#                [[[ const state = entity.state === 'on' ? 'animate' : null;
#                return `<svg viewBox="0 0 50 50"><style>@keyframes animate{0%{transform: scale(0.85);}20%{transform: scale(1.1);}40%{transform: scale(0.95);}60%{transform: scale(1.03);}80%{transform: scale(0.97);}100%{transform: scale(1);}}.animate{animation: animate 0.8s; transform-origin: center;}</style>
#                <path fill="#9da0a2" d="M26.4 25.6c.6-.3 1.1-.7 1.1-1.3L25 17.9l-2.5 6.4c0 .7.6 1.1 1.1 1.3v20.8h-5.5v2.7h13.7v-2.7h-5.5V25.6z"/>
#                <path class="${state}" fill="var(--button-card-light-color-no-temperature)" d="M24.6.9l-9.4.5c-.6.1-1.9 0-2.5 2.1s-2.4 9.1-4 16.9c-.2.7-.5 2-.5 2.3s-.4 1.6.9 1.6c.8.1 7.4.3 15.9.3 8.6 0 15.1-.3 15.9-.3 1.3-.1.9-1.3.9-1.6s-.3-1.6-.5-2.3c-1.6-7.8-3.4-14.8-4-16.9s-1.9-2-2.5-2.1c-1.6-.2-6.9-.4-9.4-.5"/> </svg>`;]]]
#            styles:
#              custom_fields:
#                icon_shade:
#                  [top: 11%, left: 4.6%, width: 3.05vw, position: absolute]
#            custom_fields:
#              circle: >
#                [[[ if (entity.state === 'on' && entity.attributes.brightness) {
#                const brightness = Math.round(entity.attributes.brightness / 2.54);
#                const radius = 20.5; const circumference = radius * 2 * Math.PI; 
#                return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" style="
#                transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - brightness / 100 * circumference};" />
#                <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle">${brightness}<tspan font-size="10">%</tspan></text></svg>`; } ]]]
#            hold_action:
#              action: call-service
#              service: browser_mod.popup
#              service_data:
#                title: '[[[ return entity.attributes.friendly_name ]]]'
#                deviceID: this
#                card:
#                  type: entities
#                  entities:
#                    - type: custom:light-popup-card
#                      entity: '[[[ return entity.entity_id ]]]'
#                      icon: none
#                      fullscreen: false
#                      brightnessWidth: 130px
#                      brightnessHeight: 360px
#                      borderRadius: 1.7em
#                      sliderColor: '#c7c7c7'
#                      sliderTrackColor: rgba(25, 25, 25, 0.9)
#                      actionSize: 4.5em
#                      actionsInARow: 2
#                      style: |
#                        #popup {
#                          margin: -2.4em 0 1.4em 0; }
#                        #popup > div.range-holder > input[type=range] {
#                          cursor: grab; }
#                        #brightnessValue {
#                          color: rgba(255, 255, 255, 0.8); margin: -1.9em 0 0 0; font-size: 2em; font-weight: 400; 
#                          position: absolute; z-index: 100; font-family: SF Display; letter-spacing: 0.02em; pointer-events: none; 
#                          mix-blend-mode: difference; text-align:center; width: 3.4em; height: 3.4em; }
#                        #popup > div.range-holder > input[type=range]::-webkit-slider-thumb {
#                          border: 0; eight: 0; width: 0; cursor: grabbing; }
#                        #popup > div.action-holder > div > div {
#                          margin: 0.8em 0.5em -0.8em 0.5em; }
#                        #popup > div.action-holder > div:last-child > div:last-child > .color {
#                          background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 80%), 
#                          conic-gradient(rgb(120,39,230), rgb(230,34,231), rgb(228,5,136), rgb(228,25,25), rgb(229,105,30), rgb(232,226,46), 
#                          rgb(125,230,41), rgb(52,232,40), rgb(51,231,92), rgb(52,232,224),rgb(32,125,229), rgb(18,39,229), rgb(120,39,230));
#                          border-width: 2px; border-color: #e6e6e6; --size: 4.4em !important; }
#                      actions:
#                        - service: light.turn_on
#                          service_data:
#                            entity_id: '[[[ return entity.entity_id ]]]'
#                            color_temp: 153
#                          color: "#d8d9e1"
#                        - service: light.turn_on
#                          service_data:
#                            entity_id: '[[[ return entity.entity_id ]]]'
#                            color_temp: 326
#                          color: "#d5b08d"
#                        - service: light.turn_on
#                          service_data:
#                            entity_id: '[[[ return entity.entity_id ]]]'
#                            color_temp: 500
#                          color: "#ce944b"
#                        - service: browser_mod.popup
#                          service_data:
#                            title: '[[[ return entity.attributes.friendly_name ]]]'
#                            deviceID: this
#                            card:
#                              type: entities
#                              show_header_toggle: false
#                              entities:
#                                - entity: '[[[ return entity.entity_id ]]]'
#                                  secondary_info: last-changed
#                                - type: custom:light-entity-card
#                                  entity: '[[[ return entity.entity_id ]]]'
#                                  brightness: false
#                                  color_temp: true
#                                  full_width_sliders: true
#                                  hide_header: true
#                                  show_slider_percent: true
#                                  smooth_color_wheel: true
#                                  consolidate_entities: true
